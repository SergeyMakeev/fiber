set(FIBER_STANDALONE_PROJECT FALSE)
if (CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
  set(FIBER_STANDALONE_PROJECT TRUE)
endif ()

if(FIBER_STANDALONE_PROJECT)
  cmake_minimum_required(VERSION 3.10)
  project(fiber LANGUAGES C)
  set(BUILD_SHARED_LIBS True)
  set(CMAKE_C_VISIBILITY_PRESET hidden)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/cmake/CMakeASM_NASMInformation.cmake")

set(can_use_assembler False)
enable_language(ASM_NASM)
if(CMAKE_ASM_NASM_COMPILER_LOADED)
  set(can_use_assembler True)
endif()

if(NOT can_use_assembler)
  message(FATAL_ERROR "can_use_assembler=${can_use_assembler}")
endif()

set(asm_sources)
if(UNIX AND CMAKE_C_SIZEOF_DATA_PTR EQUAL 8)
  set(asm_sources src/fiber_asm_x64_sysv.asm)
elseif(UNIX AND CMAKE_C_SIZEOF_DATA_PTR EQUAL 4)
  set(asm_sources src/fiber_asm_x86_cdecl.asm)
endif()

if(FIBER_STANDALONE_PROJECT)
  add_subdirectory(deps/cxx-header-utils)
endif()

add_library(fiber src/fiber.c ${asm_sources})
target_include_directories(fiber PUBLIC include)
target_include_directories(fiber PRIVATE src)
target_link_libraries(fiber header-utils)
if(BUILD_SHARED_LIBS)
  target_compile_definitions(fiber PUBLIC -DFIBER_SHARED=1)
endif()

if(FIBER_STANDALONE_PROJECT)
  add_executable(test test/test.c)
  target_link_libraries(test fiber)

  add_executable(test2 test/test2.c)
  target_link_libraries(test2 fiber)
endif()
