set(FIBER_STANDALONE_PROJECT FALSE)
if (CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
  set(FIBER_STANDALONE_PROJECT TRUE)
endif ()

if(FIBER_STANDALONE_PROJECT)
  cmake_minimum_required(VERSION 3.10)
  project(fiber LANGUAGES C)
  set(BUILD_SHARED_LIBS False)
  #set(CMAKE_C_VISIBILITY_PRESET hidden)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/cmake/CMakeASM_NASMInformation.cmake")

message(STATUS "CMAKE_SYSTEM_PROCESSOR=${CMAKE_SYSTEM_PROCESSOR}")

set(asm_sources)
set(asm_dialect ASM)
if(UNIX AND ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
  set(asm_sources src/fiber_asm_x64_sysv.asm)
  set(asm_dialect ASM_NASM)
elseif(UNIX AND ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86")
  set(asm_sources src/fiber_asm_x86_cdecl.asm)
  set(asm_dialect ASM_NASM)
elseif(UNIX AND ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "aarch64")
  set(asm_sources src/fiber_asm_aarch64.s)
else()
  message(FATAL_ERROR "fiber: combination of system and architecture not supported!")
endif()

enable_language(${asm_dialect})
if(NOT CMAKE_${asm_dialect}_COMPILER_LOADED)
  message(FATAL_ERROR "no nasm compatible assembler found")
endif()

if(FIBER_STANDALONE_PROJECT)
  add_subdirectory(deps/cxx-header-utils)
endif()

message(STATUS CMAKE_SYSTEM_PROCESSOR="${CMAKE_SYSTEM_PROCESSOR}")
add_library(fiber src/fiber.c ${asm_sources})
target_include_directories(fiber PUBLIC include)
target_include_directories(fiber PRIVATE src)
target_link_libraries(fiber header-utils)
if(BUILD_SHARED_LIBS)
  target_compile_definitions(fiber PUBLIC -DFIBER_SHARED=1)
endif()

if(FIBER_STANDALONE_PROJECT)
  add_executable(test0 test/test0.c)
  target_link_libraries(test0 fiber)

  add_executable(test test/test.c)
  target_link_libraries(test fiber)

  add_executable(test2 test/test2.c)
  target_link_libraries(test2 fiber)
endif()
